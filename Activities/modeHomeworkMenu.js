const {error_messages, spec_symbols} = require("../BotConfig/config_messages")

const _bot = require("../ROOT/BOT")
const db_ = require("../ExternalCommands/DatabaseUtility")
const logg = require("../ExternalCommands/LogsUtility")
const homeW = require("../ExternalCommands/GetHomeworkUtility")

const menuActivity = require("../Activities/modeMainMenu")

const AHW = require("../ExternalCommands/HomeworkProcessing/AddHomeWork")
const EHW = require("../ExternalCommands/HomeworkProcessing/EditHomeWork")

var DataClass = {
    id_: '',
    task_: '',
    date_: '',
    subject_: '',

    setIdValue: function(n) {DataClass.id_ = n},
    setSubjectValue: function(n) {DataClass.subject_ = n},
    setTaskValue: function(n) {DataClass.task_ = n},
    setDateValue: function(n) {DataClass.date_ = n},
}

function HomeworkProccessing(text, ChatId){

    switch (text) {

        case ("üîé –£–∑–Ω–∞—Ç—å –î–ó"):
            homeW.knowHomework(ChatId)
            break

        case ("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –î–ó"):

            _bot.BotMsg(ChatId, `${spec_symbols["SB_write"]} –ü–æ –∫–∞–∫–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É? (–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)`)
            break

        case ("üñãÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –î–ó"):

            homeW.knowHomework(ChatId)
            _bot.BotMsg(ChatId, `${spec_symbols["SB_edit"]} –í—ã–±–µ—Ä–∏ ID –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏ (–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)`)
            break

        case ("üóë –£–¥–∞–ª–∏—Ç—å –î–ó"):

            homeW.knowHomework(ChatId)
            _bot.BotMsg(ChatId, `[üóë] –í—ã–±–µ—Ä–∏ ID –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏ (–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)`)
            break
    }
}

function homeworkManageActivity(text, ChatId, msg){
    if (text == "–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è"){
        _bot.bot.sendMessage(ChatId, '–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è - –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', {
            reply_markup: {
                keyboard: [
                    ["‚úÖ –î–æ–±–∞–≤–∏—Ç—å –î–ó", "üîé –£–∑–Ω–∞—Ç—å –î–ó"],
                    ["üñãÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –î–ó", "üóë –£–¥–∞–ª–∏—Ç—å –î–ó"],
                    ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
                ]
            }
        })
        menuActivity.Modes.homeworkMode = true;
    }

    HomeworkProccessing(text, ChatId, msg)
    if (msg.reply_to_message){
    
        // ADD
        if (AHW.AddHWProcessing(msg, ChatId)){
            return true
        }
        // ADD
        
        // EDIT
        if (EHW.EditHWProcessing(msg, ChatId)){
            return true
        }
        // EDIT

        // DELETE
        if (msg.reply_to_message.text === `[üóë] –í—ã–±–µ—Ä–∏ ID –Ω—É–∂–Ω–æ–π –∑–∞–ø–∏—Å–∏ (–æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)`){

            id_ = Number(msg.text)
            if (id_){
                
                db_.DbDeleteData('homework', id_)

                logg.logger(msg, '–£–¥–∞–ª–∏–ª –∑–∞–¥–∞–Ω–∏–µ')

                _bot.BotMsg(ChatId, `[${spec_symbols["SB_success"]}] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <u>${msg.from.first_name}</u> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–∏–ª –∑–∞–¥–∞–Ω–∏–µ`)
                return true
            }
            else {
                _bot.BotMsg(ChatId, error_messages["ERROR_NotANumber"])
            }
        }
        // DELETE
    }
    return false;
}

module.exports = {homeworkManageActivity, DataClass}